{"pages":[],"posts":[{"title":"spring-boot运行jar命令提示没有主清单属性","text":"背景在开发项目的过程中，spring-boot项目打包成可执行jar，一直能正常运行，后来需要引入同事封装的一个权限框架，依赖了两个jar包，引入之后再使用mvn package将项目打包成可执行jar，运行时就会显示没有主清单属性 问题查看jar包中MANIFEST.MF文件，没有发现Main-Class等配置，从而导致spring-boot运行jar命令提示没有主清单属性 1234Manifest-Version: 1.0Built-By: KailACreated-By: Apache Maven 3.6.0Build-Jdk: 1.8.0_141 经过网上查阅资料不断排查，发现项目内除了springboot主工程main方法的类使用了@SpringBootApplication注解，新依赖的jar包里也有一个带有main方法的类并且都使用了@SpringBootApplication注解 情景再现如果工程内有两个带有main方法的类并且都使用@SpringBootApplication注解（或者另一种情形：有两个main方法并且所在类都没有使用@SpringBootApplication注解，但是如果有多个main方法，只有一个使用@SpringBootApplication注解并不会引发此问题），同时pom.xml的maven打包插件配置如下： 123456789101112&lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.5.3.RELEASE&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt;&lt;/plugin&gt; 解决方法查看Springboot官方文档的8.1.2. Packaging Executable Jar and War Files关于maven打包插件的说明 当工程没有指定&lt;mainClass&gt;或者继承了spring-boot-starter-parent并且属性未配置时，插件会自动寻找签名是public static void main(String[] args)的方法，当存在两个main方法时，插件会无法识别哪一个main方法才是主函数 1、通用解决方法：&lt;configuration&gt;下配置mainClass，指定程序入口。 123456789101112131415161718&lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.5.3.RELEASE&lt;/version&gt; &lt;configuration&gt; &lt;!-- 解决本地jar不能打入部署包的问题 --&gt; &lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt; &lt;!-- 指定程序入口 --&gt; &lt;mainClass&gt;app.Application&lt;/mainClass&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt;&lt;/plugin&gt; 配置打包后的MANIFEST.MF文件 123456789Manifest-Version: 1.0Built-By: KailAStart-Class: app.ApplicationSpring-Boot-Classes: BOOT-INF/classes/Spring-Boot-Lib: BOOT-INF/lib/Spring-Boot-Version: 1.5.8.RELEASECreated-By: Apache Maven 3.6.0Build-Jdk: 1.8.0_141Main-Class: org.springframework.boot.loader.JarLauncher 2、解决方法二，此方法有一定的限制，只有在你的pom.xml继承自spring-boot-starter-parent可以直接在&lt;properties&gt;配置&lt;start-class&gt;,直接对应清单文件里的Start-Class 123&lt;properties&gt; &lt;start-class&gt;com.xx.webapps.api.main.WebappsApiBidMain&lt;/start-class&gt;&lt;/properties&gt; 参考文章： Spring Boot Maven Plugin打包异常及三种解决方法：Unable to find main class maven引入本地jar不能打入部署包的问题解决","link":"/2019/07/09/spring-boot运行jar命令提示没有主清单属性/"}],"tags":[],"categories":[]}